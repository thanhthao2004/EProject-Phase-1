name: CI-CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}
jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install root deps
        run: npm ci

      - name: Build Docker images (CI compose)
        run: docker compose -f docker-compose.ci.yaml -p eproject-ci build

      - name: Start stack (CI compose)
        run: docker compose -f docker-compose.ci.yaml -p eproject-ci up -d

      - name: Wait for API Gateway
        run: npx wait-on tcp:localhost:3003 --timeout 90000

      - name: Grace period for services
        run: sleep 10

      - name: Run test suite
        run: npm test

      - name: Show container status (on failure)
        if: failure()
        run: |
          docker compose -f docker-compose.ci.yaml -p eproject-ci ps
          docker compose -f docker-compose.ci.yaml -p eproject-ci logs --no-color

      - name: Tear down (always)
        if: always()
        run: docker compose -f docker-compose.ci.yaml -p eproject-ci down -v


  docker-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: build-test-deploy
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    strategy:
      matrix:
        include:
          - service: api-gateway
            context: ./api-gateway
          - service: auth
            context: ./auth
          - service: product
            context: ./product
          - service: order
            context: ./order
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
            ${{ env.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}


